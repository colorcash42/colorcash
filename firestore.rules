rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow logged-in users to read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow users to manage their own bets and transactions
      match /{subcollection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Transactions collection for admin approval
    match /transactions/{transactionId} {
        // Users can't read this global list, only their own subcollection
        allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
        // Users can create, but only admins can update/delete
        allow write: if request.auth != null;
    }

    // Live Game Status: All logged-in users can read the current status
    match /liveGameStatus/{statusId} {
      allow read: if request.auth != null;
      // Write access should be restricted to backend functions
      allow write: if false;
    }

    // Live Bets: Users can create their own bets in this global collection
    match /bets/{betId} {
      // Users can only create bets for themselves
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Users can read their own bets
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
       // No one can update a bet from the client-side once placed
      allow update, delete: if false;
    }
  }
}
